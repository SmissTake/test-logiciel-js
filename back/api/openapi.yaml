openapi: 3.0.3
info:
  title: Swagger Customers - OpenAPI 3.0
  description: api to test
  version: 1.0.11
servers:
- url: https://localhost:8080
  description: Generated server url
tags:
- name: customer
  description: Operations about customer
paths:
  /customer:
    post:
      tags:
      - customer
      summary: Create customer
      description: This can only be done by the logged in customer.
      operationId: createCustomer
      requestBody:
        description: Created customer object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/xml:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
      x-swagger-router-controller: Customer
  /customer/{firstname}:
    get:
      tags:
      - customer
      summary: Get customer by customer name
      description: ""
      operationId: getCustomerByName
      parameters:
      - name: firstname
        in: path
        description: 'The name that needs to be fetched. Use customer1 for testing. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
        "400":
          description: Invalid firstname supplied
        "404":
          description: Customer not found
      x-swagger-router-controller: Customer
    put:
      tags:
      - customer
      summary: Update customer
      description: This can only be done by the logged in customer.
      operationId: updateCustomer
      parameters:
      - name: firstname
        in: path
        description: name that need to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Update an existent customer in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/xml:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Customer
    delete:
      tags:
      - customer
      summary: Delete customer
      description: This can only be done by the logged in customer.
      operationId: deleteCustomer
      parameters:
      - name: firstname
        in: path
        description: The name that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid firstname supplied
        "404":
          description: Customer not found
      x-swagger-router-controller: Customer
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        firstname:
          type: string
          example: Tony
        lastname:
          type: string
          example: fehguy
        birthDate:
          type: string
          format: date-time
          example: 2019-07-16T22:00:00Z
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      example:
        firstname: Tony
        address:
        - zip: "94301"
          city: Palo Alto
          street: 437 Lytton
        - zip: "94301"
          city: Palo Alto
          street: 437 Lytton
        id: 100000
        birthDate: 2019-07-16T22:00:00Z
        lastname: fehguy
      xml:
        name: customer
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        zip:
          type: string
          example: "94301"
      example:
        zip: "94301"
        city: Palo Alto
        street: 437 Lytton
      xml:
        name: address
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
